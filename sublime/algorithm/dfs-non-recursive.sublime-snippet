<snippet>
    <content><![CDATA[
function dfs(adj, r) {
    const stack = new Queue()
    stack.push([r, 0, -1])
    // const stack = [[r, 0, -1]]
    while (stack.length) {
        const [u, i, p] = stack.getLast()
        // const [u, i, p] = stack[stack.length - 1]
        // visited[u] = 1

        const nb = adj[u] || []
        if (!i) {
            // first visited
        }
        if (i < nb.length) {
            stack.getLast()[1]++
            // stack[stack.length - 1][1]++
            const v = nb[i]
            // if (!visited[v]) { // has circle
            if (v !== p) {
                stack.push([v, 0, u])
            }
        } else {
            // last visited
            stack.pop()
        }
    }
}
]]></content>
    <tabTrigger>dfs</tabTrigger>
    <scope>source.js</scope>
    <description>DFS Non-Recursive</description>
</snippet>
